######################################
###INGESTION CONFIGURATION DOCUMENT###
######################################


# Ingestion tiles data into a faster storage format or projection system. 

# The Ingestion Configuration file defines a mapping from current Dataset storage,
# into a new storage scheme for the data. The new storage scheme includes a different
# file format, and projection. The output of the process is recorded in the index as
# a new product, and the data will be manipulated and written out to disk in the new format. 



################# INGEST CLI ####################################

# Command line tool to ingest data
# datacube ingest [options]
# options:
#	-c : ingest configuration file
#	--year			limit process to a particular year  
#	--queue-size		task queue size
#	--save-tasks		save tasks to the specified file
#	--load-tasks		Load tasks from the specified file
#	-d			dry run, to test that everything is ok
#	--allow-product-changes	Allow the output product definition to be updated if it differs
#	--executor		Run parallelized either locally or distributed. 


######################FILE CONTENTS################################### 

# Source Product Name
# ex. ls8_nbar_scene
source_type: 

# Output Product Name
# ex. ls8_nbar_albers
output_type:


# Directory path to store output units
# ex '/media/simonaoliver/datacube/tiles'
location:


# File path pattern defining the name of the storage unit files
# ex. 'LS8_OLI_NBAR/LS8_OLI_NBAR_3577_{tile_index[0]}_{tile_index[1]}_{start_time}.nc'
file_path_template:


# Provide metadata attributes
# Applied as file level (NetCDF) attributes
global_attributes:
	title:
	summary:
	source:
	history:
	institution:
	instrument:
	keywords:
	keywords_vocabulary:
	platform:
	product_version:
	publisher_email:
	publisher_name:
	publisher_url:
	license:
	coverage_content_type:
	cdm_data_type:
	product_suite:
	acknowledgement:
	references:

storage:

	# Storage type format. Currently only NETCDF CF is supportedd
	driver: NetCDF CF

	# Definition of the output coordinate ferences system for the data to be stored in.
	# May  be specified as an EPSG or WKT code.
	crs:

	# Size of the tiles for the data to be stored is specified in projection units. 
	# Uses latitude and longitude is projection is geographic. Else use x and y
	tile_size:
		x:
		y:
	
	# Resolution for the data to be stored is specified in projection units.
	# Negative values flip the axis.	
	# Uses latitude and longitude is projection is geographic. Else use x and y
	resolution:
		x:
		y:

	# Size of the internal NetCDF chunks in 'pixels'
	chunking:
		x:
		y:
		time: 
	
	# Order of the dimensions for the data to be stored in. 
	# Uses latitude and longitude is projection is geographic. Else use x and y.
	# ex. ['time','x','y']
	dimension_order:
		

# Mapping of the input measurement names as specified in Dataset Documents, to the per-measurement ingestion parameters.
# Values  are sequence, each measurement is an item in the sequence.
measurements:
	
	  # Name of the NetCDF variable to store the data in
	  # ex. coastal_aerosol
	-  name: 

	  # Data type to store the data in: (u)int(8, 16, 32, 64), float32, float64
	  # ex. int16
	  dtype:

	  # One of nearest, cubic, bilinear, cubic_spline, lanczos, average
	  resampling_method:

          # Map of source_type measurement name to output_type measurement names
          src_varname:

	  # optional
	  nodata: 


	
